plugins {
    id "com.android.application"
    id "kotlin-android"
    // The Flutter Gradle Plugin must be applied after the Android and Kotlin Gradle plugins.
    id "dev.flutter.flutter-gradle-plugin"
    // Add Firebase plugins
    id "com.google.gms.google-services"
    id "com.google.firebase.crashlytics"
}

// Load the key.properties file
def keystoreProperties = new Properties()
def keystorePropertiesFile = rootProject.file('key.properties')
if (keystorePropertiesFile.exists()) {
    keystoreProperties.load(new FileInputStream(keystorePropertiesFile))
}

android {
    namespace = "com.gxit.app"
    compileSdk = 35
    ndkVersion = "26.1.10909125"

    buildFeatures {
        buildConfig true
    }

    compileOptions {
        sourceCompatibility = JavaVersion.VERSION_17
        targetCompatibility = JavaVersion.VERSION_17
    }

    kotlinOptions {
        jvmTarget = '17'
    }

    lint {
        checkReleaseBuilds = false
        abortOnError = false
    }
    
    signingConfigs {
        release {
            keyAlias keystoreProperties['keyAlias']
            keyPassword keystoreProperties['keyPassword']
            storeFile file(rootProject.file(keystoreProperties['storeFile']))
            storePassword keystoreProperties['storePassword']
        }
    }

    defaultConfig {
        // Application ID must match what's on Google Play
        applicationId = "com.gxit.app"
        // You can update the following values to match your application needs.
        // For more information, see: https://flutter.dev/to/review-gradle-config.
        minSdk = 23
        targetSdk = 35
        versionCode = flutter.versionCode
        versionName = flutter.versionName
        multiDexEnabled = true
        
        // Define the supported ABIs for the app
        ndk {
            // Include ARM 64-bit, ARM 32-bit, and x86_64 for emulator testing
            abiFilters 'arm64-v8a', 'armeabi-v7a', 'x86_64'
        }
    }

    buildTypes {
        release {
            // Use our release signing config
            signingConfig signingConfigs.release
            
            // Disable minification to match working app configuration
            minifyEnabled false
            shrinkResources false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            
            // Remove debug symbol level configuration
        }
        debug {
            // For faster debug builds
            minifyEnabled false
            shrinkResources false
        }
    }
    
    // This block helps avoid version conflicts
    packagingOptions {
        resources {
            excludes += [
                'META-INF/DEPENDENCIES',
                'META-INF/LICENSE',
                'META-INF/LICENSE.txt',
                'META-INF/license.txt',
                'META-INF/NOTICE',
                'META-INF/NOTICE.txt',
                'META-INF/notice.txt',
                'META-INF/ASL2.0',
                'META-INF/*.kotlin_module'
            ]
        }
        
        // Configure native library handling
        jniLibs {
            useLegacyPackaging = false  // Use modern packaging approach
            keepDebugSymbols += ['**/*.so']
            pickFirsts += ['lib/**/libflutter.so'] // Ensure only one version of libflutter.so is included
        }
    }
}

// Workaround for debug symbol stripping issue in app bundle
androidComponents {
    onVariants(selector().withBuildType("release")) { variant ->
        tasks.register("skipDebugSymbolStripping${variant.name.capitalize()}", Exec) {
            executable "echo"
            args "Skipping debug symbol stripping for app bundle"
        }
        
        // Try to disable any stripping tasks that might exist
        tasks.matching { it.name.contains("strip") && it.name.contains(variant.name.capitalize()) }.configureEach {
            enabled = false
        }
    }
}

dependencies {
    // Core Android dependencies
    implementation "androidx.core:core-ktx:1.12.0"
    implementation "androidx.core:core:1.12.0"
    implementation "androidx.multidex:multidex:2.0.1"
    implementation "androidx.window:window:1.1.0"
    implementation "androidx.window:window-java:1.1.0"
    
    // Lifecycle components
    implementation "androidx.lifecycle:lifecycle-runtime-ktx:2.6.2"
    
    // Replace the deprecated Play Core with modern libraries
    implementation "com.google.android.play:app-update:2.1.0"
    implementation "com.google.android.play:app-update-ktx:2.1.0"
    implementation "com.google.android.play:review:2.0.1" 
    implementation "com.google.android.play:review-ktx:2.0.1"
    
    // Firebase Crashlytics dependency
    implementation "com.google.firebase:firebase-crashlytics:18.6.2"
    implementation "com.google.firebase:firebase-analytics:21.5.1"
}

flutter {
    source = "../.."
}

// Force the build system to keep all native libraries
bundle {
    language {
        enableSplit = false
    }
    density {
        enableSplit = false
    }
    abi {
        enableSplit = false
    }
}
